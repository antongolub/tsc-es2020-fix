# This is a Github Workflow that runs tests on any push or pull request.
# If the tests pass and this is a push to the master branch it also runs Semantic Release.
name: CI
on: [push, pull_request]
jobs:
  init:
    name: init
    runs-on: ubuntu-20.04
    outputs:
      skip: ${{ steps.ci-skip-step.outputs.ci-skip }}
      skip-not: ${{ steps.ci-skip-step.outputs.ci-skip-not }}
    steps:
      - uses: actions/checkout@v3
      - id: ci-skip-step
        uses: mstachniuk/ci-skip@v1

  build:
    name: build
    needs: init
    if: ${{ needs.init.outputs.skip == 'false' }}
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Fetch deps
        run: yarn

      - name: Build target
        run: yarn build

      - name: Save artifact
        uses: actions/upload-artifact@v3
        with:
          name: artifact-${{ github.run_id }}
          retention-days: 1
          path: |
            docs
            target
            flow-typed
            typings
            buildstamp.json

  test_push:
    name: Test on push
    needs: build
    if: github.event_name == 'push'
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Restore artifact
        uses: actions/download-artifact@v3
        with:
          name: artifact-${{ github.run_id }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Fetch deps
        run: yarn

      - name: Unit tests
        run: yarn test:unit

      - name: Update coverage
        if: github.ref == 'refs/heads/master'
        uses: actions/upload-artifact@v3
        with:
          name: artifact-${{ github.run_id }}
          retention-days: 1
          path: |
            coverage
            .nyc_output

  test_pr:
    if: github.event_name == 'pull_request'
    needs: build
    name: Test PR (Node v${{ matrix.node-version }}, OS ${{ matrix.os }})
    strategy:
      matrix:
        os: [ windows-2019, ubuntu-20.04 ]
        node-version: [ 12, 14, 16, 18, 20 ]

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Restore artifact
        uses: actions/download-artifact@v3
        with:
          name: artifact-${{ github.run_id }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Node -v
        run: |
          node -v
          node -p process.versions.v8

      - name: Integration tests
        if: matrix.node-version != '18' || matrix.os != 'ubuntu-20.04'
        run: |
          yarn install --prod --ignore-engines
          yarn test:it

      - name: Full test suite
        if: matrix.node-version == '18' && matrix.os == 'ubuntu-20.04'
        run: |
          yarn
          yarn jest --version && yarn test

  release:
    name: Release
    # https://github.community/t/trigger-job-on-tag-push-only/18076
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    needs: test_push
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Restore artifact
        uses: actions/download-artifact@v3
        with:
          name: artifact-${{ github.run_id }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Codeclimate
        uses: paambaati/codeclimate-action@v5.0.0
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        with:
          coverageLocations: |
            ${{github.workspace}}/coverage/*.lcov:lcov

      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ${{ github.workspace }}/coverage/lcov.info

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GIT_AUTHOR_EMAIL: 'mailbox@antongolub.ru'
          GIT_COMMITTER_EMAIL: 'mailbox@antongolub.ru'
          GIT_AUTHOR_NAME: '@antongolub'
          GIT_COMMITTER_NAME: '@antongolub'
        run: npm_config_yes=true npx -p @qiwi/semrel-toolkit semantic-release -e @qiwi/semrel-config
